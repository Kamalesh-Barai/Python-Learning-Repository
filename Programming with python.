# Printing famous Hello world string
print("Hello World")

# Variable, Data Type and Mathematical Operation
# We can put our different types of data into variable
# Here 'text_to_print' is a variable and i store "Hello world" in it.

text_to_print = "Hello World"
print(text_to_print)

# The programme of adding two numbers. We will use two variable 'number1' and
# 'number2' to store numbers. Then we will use another variable 'result' to 
# store their sum.

number1 = 10
number2 = 5
result = number1 + number2
print(result)

# we can store something else in the samne variable. We can store different
# types of data into same variable but programme will remember only last 
# assigned data.

number1 = 10
print(number1)

number1 = 15
number1 = 18
print(number1)

number1 = "hello"
print(number1)

# Every data is specific type. Like 10 is an integer type data.
# "Hello" is a string type data. We can see data type by 'type' function.

# Integer type data. A whole number; a number that is not a fraction.
v = 10
print(type(v))

# String type data where can be one or more letter, numbers and sign.
# We have to use single quotation or double qoutation to make string.
# Emty string is possible.
v = "10"
type(v)

s = "100"
print(s)

s = "abcd1234-09232<>?323"
print(s)

s = 'abc 123'
print(s)

s = ''
print(s)

s = ""
print(s)

# Float type data. Float values are specified with a decimal point. Float is
# used to represent real numbers and is written with a decimal point dividing
# the integer and fractional parts.
v = 10.0
type(v)

# When we do mathematical operation between two numbers, they have to be
# same data type. Otherwise python will try to convert them as same data type.
# If we add a integer and float variable then sum will be float data type.
# But python can not add integer with string.

a = 1
b = 2.5
c = a + b
print(c)

a = 1
b = "2.5"
c = a + b # can't add. Because string and integer can't be add.

5/2       # Divided
5-2       # Subtract
5*2       # Multiplication
5//2      # Only integer part of quotient
5%2       # Modulus or Remainder
5**2      # Squre

# print() function is a built in function. It prints the specified massage to
# the screen. print function can take more than one argument.

a = 1
b = 1.2
c = "hello"
print(a, b, c)
print(a, b, c, "world")

# If we want to take input from user, then python has input() function for that.
name = input("What is your name? ")
print("Welcome to python,", name, "!")

# Arithmetic programme with input() function
number1 = input("Please type an integer and press enter: ")
number2 = input("Please type another integer and press enter: ")
print("number1 + number2 =", number1 + number2)

# input() fuction always return string. That's why we have to convert them
# to integer with int() function

number1 = input("Please type an integer and press enter: ")
number2 = input("Please type another integer and press enter: ")
print("number1 + number2 =", int(number1) + int(number2))

# All type of arrithmetic operation programme
number1 = int(input("Type an integer and press enter: "))
number2 = int(input("Type another integer and press enter: "))
ques = input("What do you want to do: +, -, *, /, //, %, **: ")
if ques == "+":
    print("number1 + number2 = ", number1 + number2)
elif ques == "-":
    print("number1 - number2 = ", number1 - number2)
elif ques == "*":
    print("number1 * number2 = ", number1 * number2)
elif ques == "/":
    print("number1 / number2 = ", number1 / number2)
elif ques == "//":
    print("number1 // number2 = ", number1 // number2)
elif ques == "%":
    print("number1 % number2 = ", number1 % number2)
elif ques == "**":
    print("number1 ** number2 = ", number1 ** number2)
else:
    print("Please type any sign of arrithmetic operation.")

# Conditional Logic
2 == 3
3 == 3
2 > 3
2 < 3
2 != 3
3 != 3
2 >= 3
2 <= 3

# Two strings are equal or not
"Bangladesh" == "Bangladesh"
"Bangladesh" == "bangladesh"

# List. When we want to put multi data togather, we can use list.
# List starts and ends up with [] squre bracket. Every elements in the list
# splits with coma.

number_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
print(number_list)

# We can get list's element individually. Type serial number into squre bracket.
# In programming serial number called index. Index starts with 0 in python.
# If we have 10 elements in the list then index will be 0 to 9

number_list[0]
number_list[1]
number_list[9]

# How many elements we have in the list? We an know that with len() function.
saarc = ["Bangladesh", "Afghanistan", "Bhutan", "Nepal",
         "India", "Pakistan", "Sri Lanka"]
saarc[0]

print("Number of countries in SAARC:", len(saarc))

# Checking the member of SAARC. It is easy to verify whether an element is on
# the list or not.

"Bangladesh" in saarc
"China" in saarc
"China" not in saarc
"India" not in saarc

# if statement. If the condition of 'if' block is true then the job will be done.

saarc = ["Bangladesh", "Nepal", "Bhutan", "India",
         "Afghanistan", "Pakistan", "Sri Lanka"]

country = input("Enter the name of the country: ")

if country in saarc:
    print(country, "is a member of SAARC.")

print("Program terminated.")

# Use of else statement. If the condition of 'if' block is false then the
# program will do 'else' block job.

saarc = ["Bangladesh", "Nepal", "Bhutan", "India",
         "Afghanistan", "Pakistan", "Sri Lanka"]

country = input("Enter the name of the country: ")

if country in saarc:
    print(country, "is a member of SAARC.")
else:
    print(country, "is not a member of SAARC")
    
print("Program terminated.")

# Grade calculator program. When we need to check continously various types
# of condition, we will use 'elif' statement after 'if' statement.
# When one condition will true then other condition won't be checked.

marks = input("Please enter your marks: ")
marks = int(marks)   # input function returns string. use int function convert to integr.

if marks >= 80:
    grade = "A+"
elif marks >= 70:
    grade = "A"
elif marks >= 60:
    grade = "A-"
elif marks >= 50:
    grade = "B"
else:
    grade = "F"
    
print("Your grade is: ", grade)

# Take a number form user and find out whether this number is positive or negative.

number = int(input("Type a number: "))

if number >= 0:
    print(number, "is positive")
else:
    print(number, "is negative")
    
# Find out whether a number is even or odd.

number = int(input("Type a number: "))

if number % 2 == 0:
    print(number, "is a even number.")
else:
    print(number, "is a odd number.")

# Leap Year. If there is a leap year, february will be 29 days in that year
# and if not, it will be 28 days. If any year is divisible by 4, it is a
# leap year but there is an exception. If that year is divisible by 100,
# then it must also be divisible by 400.

year = 112

if year % 4 != 0:
    print("No.")
else:
    if year % 100 == 0:
        if year % 400 == 0:
            print("Yes")
        else:
            print("No")
    else:
        print("yes.")

# Another way to find leap year

year = 2020

if year % 400 == 0:
    print("Yes")
elif year % 100 == 0:
    print("No")
elif year % 4 == 0:
    print("Yes.")
else:
    print("N0.")

# Another way to find leap year

year = 2024

if year % 100 != 0 and year % 4 == 0:
    print("Yes.")
elif year % 100 == 0 and year % 400 == 0:
    print("Yes")
else:
    print("No")

# Year as a input.

year = int(input("Type a year: "))

if year % 4 != 0:
    print(year, "is not a leap year.")
else:
    if year % 100 == 0:
        if year % 400 == 0:
            print(year, "is a leap year and it is divisible by 100, 400 and 4")
        else:
            print(year, "is not a leap year. Divisible by 4 and 100")
    else:
        print(year, "is a leap year and it is divisible by only 4")




year = int(input("Type a year: "))

if year % 400 == 0:
    print(year, "is a leap year and it is divisible by 100, 400, and 4")
elif year % 100 == 0:
    print(year, "is not a leap year. Divisible by 4 and 100")
elif year % 4 == 0:
    print(year, "is a leap year and it is divisible by only 4")
else:
    print(year, "is not a leap year")



year = int(input("Type a year: "))

if year % 100 != 0 and year % 4 == 0:
    print(year, "is a leap year. Divisible by only 4")
elif year % 100 == 0 and year % 400 == 0:
    print(year, "is a leap year. Divisible by 100, 400 ,4")
else:
    print(year, "is not a leap year.")

    
# Turtle. Turtle is a module in python. Before use any module we have to
# import that module first. we can import that module as any name or import
# as default name

import turtle as t
t.forward(100)        # We told turtle go ahead 100 pixel.
t.exitonclick()

import turtle
turtle.forward(100)   # We told turtle go ahead 100 pixel.
turtle.exitonclick()

# Making square by turtle

import turtle

turtle.shape("turtle")   # making turtle shape. type- ?turtle.shape for details.
turtle.speed(10)         # Increasing turtle speed by speed function.
# see ?turtle.speed for details

turtle.forward(100)
turtle.left(90)
turtle.forward(100)
turtle.left(90)
turtle.forward(100)
turtle.left(90)
turtle.forward(100)

turtle.exitonclick()

# Making equilateral triangle. An equilateral triangle is a triangle in
# which all three sides have the same length. All three internal angles
# are each 60 degrees.

import turtle

turtle.forward(200)
turtle.left(120)
turtle.forward(200)
turtle.left(120)
turtle.forward(200)
turtle.left(120)

turtle.exitonclick()

# Loop - There is an option called loop in programming to do the same
# thing over and over again. If we want to show ten times on the screen
# "I want to be a programmer."

for i in range(10):
    print("I want to be a programmer.")

# The reason of using i variable is that the value of i variable will
# increase one by one from 0 and its maximum value will be n-1.

for i in range(5):
    print(i)

# Making squre by for loop

import turtle

turtle.shape("turtle")
turtle.speed(1)

for squre in range(4):
    turtle.forward(100)
    turtle.left(90)
    
turtle.exitonclick()

# Now we will write a program that will add 1 fifty times.
# we can change the variable name.

result = 0
for number in range(50):
    result = result + 1
print(result)

# Add each integer from 1 to 50 and add each summation to the next integer.

result = 0
num = 1
for i in range(50):
    result = result + num
    num = num + 1
    print(result)
    
result = 0
for num in range(51):
    result = result + num
    print(result)

# range(start, stop, step)

for i in range(1, 20, 5):
    print(i)

result = 0
for num in range(1, 51):
    result += num
    print(result)

# My thoughts

result = 1
num = 2
for i in range(50):
    result = result + num
    num = num + 1
    print(result)

range(5, 10)

# Numbers from 1 to 100 are divisible by 5 and print their summation.

result = 0
for i in range(1, 101):
    if i % 5 == 0:
        result += i
        print(i)
print("Summation is: ", result)

# Another way to do the same task

result = 0
for num in range(5, 101, 5):
    print(num)
    result += num
print("Summation is: ", result)

# Now we will draw a dash line using loop by turtle.
# There will be use penup() and pendown() functions.

import turtle
turtle.speed(3)

for i in range(20):
    turtle.forward(10)
    turtle.penup()
    turtle.forward(3)
    turtle.pendown()
    
turtle.exitonclick() 

# Nested Loop.
# Make 5 square with nested loop. Each squre will be bigger than another one.

import turtle
turtle.shape("turtle")

for side_length in range(50, 200, 30):
    for i in range(4):
        turtle.forward(side_length)
        turtle.left(90)

turtle.exitonclick()

# My example - Making Square - Nested Loop

turtle.speed(0)
for side_length in range(60, 200, 20):
    turtle.left(90)
    turtle.forward(side_length)
    for i in range(4):
        turtle.left(90)
        turtle.forward(side_length + 10)
    turtle.penup()
    turtle.forward(10)
    turtle.pendown()
    
turtle.exitonclick()

# Big space between squares

turtle.speed(0)
for side_length in range(50, 300, 60):
    turtle.left(90)
    turtle.forward(side_length)
    for i in range(4):
        turtle.left(90)
        turtle.forward(side_length + 30)
    turtle.penup()
    turtle.forward(30)
    turtle.pendown()
        
turtle.exitonclick()

# If we have any list, we can apply loop on the list.

saarc = ["Bangladesh", "Pakistan", "Afghanistan",
         "India", "Sri Lanka", "Bhutan", "Nepal"]

for country in saarc:
    print(country, "is a member of SAARC.")

# There is another funny thing, we can make list by range.
# I have to use list() function in there. If we want to make a list of
# all of the numbers from 0 to 10.

li = list(range(11))
print(li)

# If we want to make a list of all of the even numbers from 1 to 20.

li_even = list(range(2, 21, 2))
print(li_even)

# While loop - First i have to write "while", then i have to write a
# condition, if that condition is true then the task inside the loop will
# be done once, then that condition will be check again.

# Example 1
i = 0
while i < 5:
    print(i)
    i += 1

# Example 2
i = 5
while i >= 0:
    i -= 1
    print(i)

# Now we will write a program for multiplication table using while loop.

n = int(input("Please enter a positive integer: "))
m = 1

while m <= 10:
    print(n, "X", m, "=", n*m)
    m += 1

# Draw a wheel with 36 axis.

import turtle

turtle.color("red")
turtle.speed(2)

counter = 0
while counter < 36:
    for i in range(4):
        turtle.forward(100)
        turtle.right(90)
    turtle.right(10)
    counter += 1
turtle.exitonclick()

# Another example - Using of dot() function

import turtle

height = 5
width = 5

turtle.penup()
for y in range(height):
    for x in range(width):
        turtle.dot()
        turtle.forward(20)
    turtle.backward(20 * width)
    turtle.right(90)
    turtle.forward(20)
    turtle.left(90)
turtle.exitonclick()
